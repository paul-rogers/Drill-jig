// Generated by http://code.google.com/p/protostuff/ ... DO NOT EDIT!
// Generated from protobuf

package org.apache.drill.jig.proto;

import java.io.Externalizable;
import java.io.IOException;
import java.io.ObjectInput;
import java.io.ObjectOutput;

import com.dyuproject.protostuff.GraphIOUtil;
import com.dyuproject.protostuff.Input;
import com.dyuproject.protostuff.Message;
import com.dyuproject.protostuff.Output;
import com.dyuproject.protostuff.Schema;
import com.dyuproject.protostuff.UninitializedMessageException;

public final class LoginPropertiesRequest implements Externalizable, Message<LoginPropertiesRequest>, Schema<LoginPropertiesRequest>
{

    public static Schema<LoginPropertiesRequest> getSchema()
    {
        return DEFAULT_INSTANCE;
    }

    public static LoginPropertiesRequest getDefaultInstance()
    {
        return DEFAULT_INSTANCE;
    }

    static final LoginPropertiesRequest DEFAULT_INSTANCE = new LoginPropertiesRequest();

    
    private String loginType;

    public LoginPropertiesRequest()
    {
        
    }

    public LoginPropertiesRequest(
        String loginType
    )
    {
        this.loginType = loginType;
    }

    // getters and setters

    // loginType

    public String getLoginType()
    {
        return loginType;
    }

    public LoginPropertiesRequest setLoginType(String loginType)
    {
        this.loginType = loginType;
        return this;
    }

    // java serialization

    public void readExternal(ObjectInput in) throws IOException
    {
        GraphIOUtil.mergeDelimitedFrom(in, this, this);
    }

    public void writeExternal(ObjectOutput out) throws IOException
    {
        GraphIOUtil.writeDelimitedTo(out, this, this);
    }

    // message method

    public Schema<LoginPropertiesRequest> cachedSchema()
    {
        return DEFAULT_INSTANCE;
    }

    // schema methods

    public LoginPropertiesRequest newMessage()
    {
        return new LoginPropertiesRequest();
    }

    public Class<LoginPropertiesRequest> typeClass()
    {
        return LoginPropertiesRequest.class;
    }

    public String messageName()
    {
        return LoginPropertiesRequest.class.getSimpleName();
    }

    public String messageFullName()
    {
        return LoginPropertiesRequest.class.getName();
    }

    public boolean isInitialized(LoginPropertiesRequest message)
    {
        return 
            message.loginType != null;
    }

    public void mergeFrom(Input input, LoginPropertiesRequest message) throws IOException
    {
        for(int number = input.readFieldNumber(this);; number = input.readFieldNumber(this))
        {
            switch(number)
            {
                case 0:
                    return;
                case 1:
                    message.loginType = input.readString();
                    break;
                default:
                    input.handleUnknownField(number, this);
            }   
        }
    }


    public void writeTo(Output output, LoginPropertiesRequest message) throws IOException
    {
        if(message.loginType == null)
            throw new UninitializedMessageException(message);
        output.writeString(1, message.loginType, false);
    }

    public String getFieldName(int number)
    {
        switch(number)
        {
            case 1: return "loginType";
            default: return null;
        }
    }

    public int getFieldNumber(String name)
    {
        final Integer number = __fieldMap.get(name);
        return number == null ? 0 : number.intValue();
    }

    private static final java.util.HashMap<String,Integer> __fieldMap = new java.util.HashMap<String,Integer>();
    static
    {
        __fieldMap.put("loginType", 1);
    }
    
}
